{
  "description": "Build Alpine Linux 3 x86_64 Proxmox template",
  "variables": {
      "proxmox_host": "{{env `proxmox_host`}}",
      "proxmox_url": "{{env `proxmox_url`}}",
      "proxmox_username": "root@pam",
      "proxmox_password": "{{user `proxmox_password`}}",
      "iso_filename": "{{user `iso_filename`}}",
      "vm_id": "{{user `vm_id`}}",
      "vm_name": "alpine3-tmpl",
      "template_description": "Alpine Linux 3.11 x86_64 template built with packer ({{user `vm_ver`}}). Username: {{env `vm_default_user`}}",
      "vm_default_user": "{{env `vm_default_user`}}",
      "vm_memory": "{{env `vm_memory`}}",
      "ssh_username": "root",
      "ssh_password": "{{user `ssh_password`}}"
  },
  "sensitive-variables": ["proxmox_password", "ssh_password" ],
  "provisioners": [
    {
      "type": "ansible",
      "playbook_file": "./playbook/server-template.yml",
      "extra_arguments": [ "-v", "--extra-vars", "vm_default_user={{user `vm_default_user`}}" ],
      "ansible_env_vars": [ "ANSIBLE_CONFIG=./playbook/ansible.cfg", "ANSIBLE_FORCE_COLOR=True" ]
    }
  ],
  "builders": [
      {
          "type": "proxmox",
          "proxmox_url":  "{{user `proxmox_url`}}",
          "insecure_skip_tls_verify": true,
          "username": "{{user `proxmox_username`}}",
          "password": "{{user `proxmox_password`}}",
          "vm_id":  "{{user `vm_id`}}",
          "vm_name": "{{user `vm_name`}}",
          "template_description":"{{user `template_description`}}",
          "memory": "{{user `vm_memory`}}",
          "cores": "2",
          "os": "l26",
          "http_directory": "http",

          "node": "{{user `proxmox_host`}}",
          "network_adapters": [
            {
              "model": "virtio",
              "bridge": "vmbr0"
            }
          ],
          "disks": [
            {
              "type": "sata",
              "disk_size": "8G",
              "storage_pool": "local",
              "storage_pool_type": "directory",
              "format": "qcow2"
            }
          ],
          "ssh_username": "{{user `ssh_username`}}",
          "ssh_password": "{{user `ssh_password`}}",
          "ssh_timeout": "20m",
          "iso_file": "local:iso/{{user `iso_filename`}}",
          "unmount_iso": true,
          "boot_wait": "10s",
          "boot_command": [
              "root<enter><wait>",
              "ifconfig eth0 up && udhcpc -i eth0<enter><wait5>",
              "wget http://{{ .HTTPIP }}:{{ .HTTPPort }}/answers<enter><wait>",
              "setup-alpine -f $PWD/answers<enter><wait5>",
              "{{user `ssh_password`}}<enter><wait>",
              "{{user `ssh_password`}}<enter><wait>",
              "<wait10><wait5>",
              "y<enter>",
              "<wait10><wait10>",
              "rc-service sshd stop <enter>",
              "mount /dev/sda2 /mnt <enter>",
              "mount /dev/ /mnt/dev/ --bind <enter>",
              "mount -t proc none /mnt/proc <enter>",
              "mount -o bind /sys /mnt/sys <enter>",
              "chroot /mnt /bin/sh -l <enter><wait>",
              "echo '@edgecommunity http://download.nus.edu.sg/mirror/alpine/v3.12/community' >> /etc/apk/repositories <enter>",
              "echo -e 'nameserver 1.1.1.1' > /etc/resolv.conf <enter>",
              "apk update <enter><wait10>",
              "apk add 'qemu-guest-agent@edgecommunity' 'udev' 'python3' 'py3-pip' <enter><wait>",
              "echo -e GA_PATH=\"/dev/vport1p1\" >> /etc/conf.d/qemu-guest-agent <enter>",
              "rc-update add qemu-guest-agent <enter>",
              "rc-update add udev",
              "rc-update add udev-trigger",
              "rc-update add udev-settle",
              "rc-update add udev-postmount",
              "echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config <enter>",
              "exit <enter><wait>",
              "umount /mnt/sys <enter><wait>",
              "umount /mnt/proc <enter><wait>",
              "umount /mnt/dev <enter><wait>",
              "umount /mnt <enter>",
              "reboot <enter>"
          ]
      }
  ],
  "post-processors": [
    {
      "type": "shell-local",
      "inline_shebang": "/bin/bash -e",
      "inline": ["qm set {{user `vm_id`}} --scsihw virtio-scsi-pci --serial0 socket --vga serial0"]
    }
]
}
